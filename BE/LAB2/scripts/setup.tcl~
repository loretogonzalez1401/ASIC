set MW_REF_PATH "MW"

set MW_REFERENCE_LIB_DIRS "\
  MW/UTAH_V1P1 \
  MW/ICG \
  MW/IO"

set target_library "c5n_utah_std_v5_t27.db icg4utah.db"
set link_library "* $target_library $synthetic_library c5n_utah_std_v5_t27.db io.db"
set search_path ". MW/ logic/ scripts/ inputs/"
set mw_reference_library "MW/UTAH_V1P1 MW/ICG MW/IO"
set synthetic_library "dw_foundation.sldb"
set TECH_FILE "MW/UTAH.tf"; #Milkiway Tech
set MAP_FILE "${MW_REF_PATH}/ami500hxkx_3m.map"; #Map File
set TLUPLUS_MAX_FILE "${MW_REF_PATH}/ami500.tluplus"
set TLUPLUS_MIN_FILE "${MW_REF_PATH}/ami500.tluplus"

set mw_design_library my_mw_lib
set mw_reference_library ${MW_REFERENCE_LIB_DIRS}

# Only create new Milkyway design library if it doesn't already exist
sh rm -rf $mw_design_library
if {![file isdirectory $mw_design_library ]} {
  set  mw_use_layer_enhancement true
#  extend_mw_layers
  create_mw_lib  -technology $TECH_FILE \
                -mw_reference_library $mw_reference_library \
                $mw_design_library
} else {
  # If Milkyway design library already exists, ensure that it is consistent with specified Milky
  set_mw_lib_reference $mw_design_library -mw_reference_library $mw_reference_library
}

open_mw_lib     $mw_design_library

#check_library

set_tlu_plus_files -max_tluplus $TLUPLUS_MAX_FILE \
                   -min_tluplus $TLUPLUS_MIN_FILE \
                   -tech2itf_map $MAP_FILE
#.1
# source scripts/setup.tcl -echo

#.2
 import_designs inputs/top_mapped_final.ddc -format ddc 
 check_timing
 source scripts/floorplan.tcl -echo
 check_physical_constraints
 save_mw_cel -as top_postFloorplan

#.3
 place_opt
 report_timing > reports/top.timing.placement.rpt
 report_congestion -grc_based -routing_stage global
 save_mw_cel -as top_postPlaceOPT

 remove_clock_uncertainty [all_clocks]
 clock_opt -fix_hold_all_clocks

 derive_pg_connection -power_net {vdd!} -ground_net {gnd!} -verbose
 preroute_standard_cells -nets {vdd! gnd!} -connect horizontal
 report_timing > reports/top.timing.cts.rpt
 report_clock_tree
 save_mw_cel -as top_postCTS
 route_opt
 save_mw_cel -as top_postRouteOpt

#.4a
 insert_stdcell_filler -cell_with_metal "FILL8 FILL4 FILL2 FILL" -connect_to_power "vdd!" -connect_to_ground "gnd!"
 derive_pg_connection -power_net {vdd!} -ground_net {gnd!} -verbose 
 preroute_standard_cells -nets {vdd! gnd!} -connect horizontal 
return
#.4b
 set_route_zrt_detail_options -default_gate_size 1.8 -default_port_external_gate_size 1.8
 define_antenna_rule my_mw_lib -mode 1 -diode_mode 0 -metal_ratio 1000 -cut_ratio 0
 route_zrt_detail -incremental true 
 verify_zrt_route -antenna true 
 insert_metal_filler -fill_poly -bounding_box { { 260 260 } {3460 2626} } -out self -timing_driven -to_metal 3
 set_parameter -name wellFillerAlignWithCell -value 1 -module apl
 insert_well_filler -layer NWELL -ignore_PRboundary 
 save_mw_cel -as TOP_postChipFinish
 verify_lvs
return
# verify_pg_net
# save_mw_cel -as top_final
# close_mw_lib
# exit

#icc_shell -f scripts/setup.tcl | tee icc.log
#grep ^Error icc.log
#start_gui

